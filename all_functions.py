from telegram import InlineQueryResultArticle, InputTextMessageContent
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardRemove, ReplyKeyboardMarkup, \
    KeyboardButton
import requests
import os
import datetime
import my_logging
from statistics import Statistic

logger = my_logging.get_logger(__name__)

if os.environ.get('token_bot'):
    logger.info('–ü–æ–≥–Ω–∞–ª–∏!')
else:
    logger.info('–ù—É–∂–µ–Ω token_bot. –î–æ–±–∞–≤—å –µ–≥–æ –∏–ª–∏ –Ω–µ –±—É–¥—É —Ä–∞–±–æ—Ç–∞—Ç—å!')


def start(update, context):
    f = 'start'
    Statistic().statistic_updata(update, f)
    text = "%s \n%s \n%s \n%s \n%s \n%s \n%s \n%s \n%s \n%s \n" % ("–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–µ—Ç —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è!",
                                                                   "–ï—Å–ª–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –Ω–∏–∂–µ, "
                                                                   "—è –±—É–¥—É –ø—Ä–æ—Å—Ç–æ –ø–æ–≤—Ç–æ—Ä—è—Ç—å –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ(",
                                                                   "",
                                                                   "–ö–æ–º–∞–Ω–¥–∞ /time_now –ø–æ–∫–∞–∂–µ—Ç —Ç–µ–∫—É—â—É—é—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è.",
                                                                   "–ö–æ–º–∞–Ω–¥–∞ /cat –ø–æ–∫–∞–∂–µ—Ç –≤–∞–º –∫–∞—Ä—Ç—É–Ω–∫—É —Å –∫–æ—Ç–∏–∫–æ–º.",
                                                                   "",
                                                                   "–ï—â–µ –µ—Å—Ç—å –∫–æ–º–∞–Ω–¥–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∫–∞–∂–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É "
                                                                   "–ø–æ —ç—Ç–æ–º—É –±–æ—Ç—É, –Ω–æ —è –í–∞–º –Ω–µ —Å–∫–∞–∂—É)",
                                                                   "",
                                                                   "",
                                                                   "–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—à–∏—Ç–µ @Elrik237",
                                                                   )
    context.bot.send_message(chat_id=update.effective_chat.id, text=text)

    keyboard1 = [
        [
            InlineKeyboardButton("–¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è", callback_data='1'),
            InlineKeyboardButton("–ö–∞—Ä—Ç–∏–Ω–∫–∏ —Å –∫–æ—Ç–∏–∫–∞–º–∏", callback_data='2'),
        ],
        [
            InlineKeyboardButton("–í—ã–ø–∏—Ç—å –∫–æ—Ñ–µ —Å @Elrik237", callback_data='3')
        ],
    ]

    reply_markup = InlineKeyboardMarkup(keyboard1)

    update.message.reply_text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ:', reply_markup=reply_markup)


def getcat():
    try:
        r = requests.get('http://thecatapi.com/api/images/get?format=src')
        url = r.url
    except:
        url = getcat()
        print('Error with cat parsing')
        pass
    return url


def sendcat(update, context):
    f = 'cat'
    Statistic().statistic_updata(update, f)
    context.bot.sendPhoto(chat_id=update.effective_chat.id, photo=getcat(), reply_markup=draw_button())


def draw_button():
    keys = [[InlineKeyboardButton('üêà–ï—â–µ –∫–æ—Ç–∏–∫–∞?!üêà', callback_data='2')]]
    return InlineKeyboardMarkup(inline_keyboard=keys)


def coffee(update, context):
    f = 'coffee'
    Statistic().statistic_updata(update, f)
    keyboard = [
        [
            InlineKeyboardButton("–°–µ–≥–æ–¥–Ω—è", callback_data='4'),
            InlineKeyboardButton("–ó–∞–≤—Ç—Ä–∞", callback_data='5'),
        ],
        [
            InlineKeyboardButton("–ù–∞ –≤—ã—Ö–æ–¥–Ω—ã—Ö", callback_data='6')
        ],
    ]

    markup = InlineKeyboardMarkup(keyboard, one_time_keyboard=True)

    context.bot.send_message(chat_id=update.effective_chat.id, text='–ö–æ–≥–¥–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å @Elrik237 –Ω–∞ –∫–æ—Ñ–µ?',
                             reply_markup=markup)


query_user_id = []


def get_callback_from_button(update, context):
    user = update.effective_user.username
    user_id = update.effective_user.id
    query = update.callback_query

    keyboard2 = [
        [
            InlineKeyboardButton("–î–∞", callback_data='7'),
            InlineKeyboardButton("–ù–µ—Ç", callback_data='8'),
        ],
        [],
    ]

    markup1 = InlineKeyboardMarkup(keyboard2, one_time_keyboard=True)

    if int(query.data) == 2:
        sendcat(update, context)
    elif int(query.data) == 1:
        time_now(update, context)
    elif int(query.data) == 3:
        coffee(update, context)
    elif int(query.data) == 4:
        context.bot.send_message(chat_id=update.effective_chat.id,
                                 text='–Ø —Å–æ–æ–±—â–∏–ª @Elrik237, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–µ–≥–æ–¥–Ω—è –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è!')
        context.bot.send_message(chat_id=139664901, text=f'{user_id}:@{user} —Ö–æ—á–µ—Ç —Å–µ–≥–æ–¥–Ω—è –≤—ã–ø–∏—Ç—å —Å –≤–∞–º–∏ –∫–æ—Ñ–µ!',
                                 reply_markup=markup1)
        query_user_id.insert(0, user_id)


    elif int(query.data) == 5:
        context.bot.send_message(chat_id=update.effective_chat.id,
                                 text='–Ø —Å–æ–æ–±—â–∏–ª @Elrik237, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤—Ç—Ä–∞ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è!')
        context.bot.send_message(chat_id=139664901, text=f'{user_id}:@{user} —Ö–æ—á–µ—Ç –∑–∞–≤—Ç—Ä–∞ –≤—ã–ø–∏—Ç—å —Å –≤–∞–º–∏ –∫–æ—Ñ–µ!',
                                 reply_markup=markup1)
        query_user_id.insert(0, user_id)


    elif int(query.data) == 6:
        context.bot.send_message(chat_id=update.effective_chat.id,
                                 text='–Ø —Å–æ–æ–±—â–∏–ª @Elrik237, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã—Ö –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è!')
        context.bot.send_message(chat_id=139664901, text=f'{user_id}:@{user} —Ö–æ—á–µ—Ç –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã—Ö –≤—ã–ø–∏—Ç—å —Å –≤–∞–º–∏ –∫–æ—Ñ–µ!',
                                 reply_markup=markup1)
        query_user_id.insert(0, user_id)


    elif int(query.data) == 7:
        context.bot.send_message(chat_id=query_user_id[0],
                                 text='@Elrik237 –≥–æ—Ç–æ–≤ —Å –í–∞–º–∏ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è!')
        context.bot.send_message(chat_id=139664901, text='–Ø –æ—Ç–ø—Ä–∞–≤–∏–ª –≤–∞—à –æ—Ç–≤–µ—Ç')
    elif int(query.data) == 8:
        context.bot.send_message(chat_id=query_user_id[0],
                                 text='@Elrik237 –Ω–µ –≥–æ—Ç–æ–≤ —Å –í–∞–º–∏ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è! –î–∞–≤–∞–π—Ç–µ –∑–∞–ø–ª–∞–Ω–∏—Ä—É–µ–º –¥—Ä—É–≥–æ–π –¥–µ–Ω—å!')
        context.bot.send_message(chat_id=139664901, text='–Ø –æ—Ç–ø—Ä–∞–≤–∏–ª –≤–∞—à –æ—Ç–≤–µ—Ç')


def echo(update, context):
    time = datetime.datetime.today().strftime('%m/%d/%Y %H:%M')
    f = 'echo'
    Statistic().statistic_updata(update, f)
    context.bot.send_message(chat_id=update.effective_chat.id, text=update.message.text + ' ' + time)


def time_now(update, context):
    time = datetime.datetime.today().strftime('%m/%d/%Y %H:%M')
    f = 'time_now'
    Statistic().statistic_updata(update, f)
    context.bot.send_message(chat_id=update.effective_chat.id, text=time)


def inline_(update, context):
    time = datetime.datetime.today().strftime('%m/%d/%Y %H:%M')
    f = 'inlin_'
    Statistic().inline_statistic_updata(update, f)

    results = list()
    results.append(
        InlineQueryResultArticle(
            id='1',
            title='–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è',
            description='–í—ã–≤–æ–¥–∏—Ç —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä—É–º—è',
            input_message_content=InputTextMessageContent('–¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: ' + time)
        )
    )
    # results.append(
    #     InlineQueryResultArticle(
    #         id='2',
    #         title='–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –Ω–∞ –∫–æ—Ñ–µ',
    #         description='–ü—Ä–∏–≥–ª–∞—à–∞–µ—Ç –ª—é–±–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ —á–∞—Ç–∞ –Ω–∞ –∫–æ—Ñ–µ',
    #         input_message_content=InputTextMessageContent('–ö–æ–≥–¥–∞ –í—ã —Ö–æ—Ç–∏—Ç–∏–µ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –Ω–∞ –∫–æ—Ñ–µ?'),
    #         reply_markup=InlineKeyboardMarkup(keyboard)
    #
    #     )
    # )
    context.bot.answer_inline_query(update.inline_query.id, results=results)


def unknown(update, context):
    f = 'unknown'
    Statistic().statistic_updata(update, f)
    context.bot.send_message(chat_id=update.effective_chat.id, text="Sorry, I didn't understand that command.")
